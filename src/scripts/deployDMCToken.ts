import { ethers } from "ethers";

const DMC_TOKEN_ABI = [
    "constructor()",
    "function name() view returns (string)",
    "function symbol() view returns (string)",
    "function decimals() view returns (uint8)",
    "function totalSupply() view returns (uint256)",
    "function balanceOf(address) view returns (uint256)",
    "function transfer(address to, uint amount) returns (bool)",
    "function allowance(address owner, address spender) view returns (uint256)",
    "function approve(address spender, uint amount) returns (bool)",
    "function transferFrom(address from, address to, uint amount) returns (bool)",
    "event Transfer(address indexed from, address indexed to, uint amount)",
    "event Approval(address indexed owner, address indexed spender, uint amount)"
];

// Simple ERC20 bytecode that implements the basic functions
const DMC_TOKEN_BYTECODE = "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f444f4f4d434f494e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f444d43000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009692919062000203565b508060049080519060200190620000af92919062000203565b505050620000c4336200012d60201b60201c565b620000e06012600a6200018160201b62000a2d1790919060201c565b6002819055503373ffffffffffffffffffffffffffffffffffffffff166000808282546200010f919062000420565b92505081905550600254600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505062000757565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001979062000312565b60405180910390fd5b620001b4600083836200019e60201b60201c565b8060026000828254620001c8919062000420565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050565b8280546200021190620004f1565b90600052602060002090601f0160209004810192826200023557600085556200028b565b82601f106200025057805160ff19168380011785556200028b565b828001600101855582156200028b579182015b828111156200028a57825182559160200191906001019062000263565b5b5090506200029a91906200029e565b5090565b5b80821115620002b95760008160009055506001016200029f565b5090565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620002fa601f83620002bd565b91506200030782620002ce565b602082019050919050565b600060208201905081810360008301526200032d81620002eb565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200037082620002bd565b91506200037d83620002bd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003b557620003b462000334565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006200040082620002bd565b91506200040d83620002bd565b9250826200042057620004216200039e565b5b828204905092915050565b60006200042d82620002bd565b91506200043a83620002bd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156200047657620004756200039e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200050a57607f821691505b602082108114156200052157620005206200047f565b5b50919050565b61138880620005b76000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806379cc67901161008c578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100ea565b806379cc6790146102165780638da5cb5b1461023257806395d89b4114610250576100ea565b806323b872dd116100c857806323b872dd14610166578063313ce5671461019657806339509351146101b457806342966c68146101e4576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f7610322565b6040516101049190610d37565b60405180910390f35b61012760048036038101906101229190610df2565b6103b4565b6040516101349190610e4d565b60405180910390f35b6101506103d7565b60405161015d9190610e77565b60405180910390f35b610180600480360381019061017b9190610e92565b6103e1565b60405161018d9190610e4d565b60405180910390f35b61019e610410565b6040516101ab9190610f01565b60405180910390f35b6101ce60048036038101906101c99190610df2565b610419565b6040516101db9190610e4d565b60405180910390f35b6101fe60048036038101906101f99190610f1c565b610450565b60405161020d9190610e4d565b60405180910390f35b610230600480360381019061022b9190610df2565b61046e565b005b61023a61048c565b6040516102479190610f58565b60405180910390f35b6102586104b5565b6040516102659190610d37565b60405180910390f35b610290600480360381019061028b9190610df2565b610547565b60405161029d9190610e4d565b60405180910390f35b6102c060048036038101906102bb9190610df2565b6105be565b6040516102cd9190610e4d565b60405180910390f35b6102f060048036038101906102eb9190610f73565b6105e1565b6040516102fd9190610e77565b60405180910390f35b610320600480360381019061031b9190610fb2565b610668565b005b60606003805461033190610fff565b80601f016020809104026020016040519081016040528092919081815260200182805461035d90610fff565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf6106ec565b90506103cc8185856106f4565b600191505092915050565b6000600254905090565b6000806103ec6106ec565b90506103f98582856108bf565b610404858585610956565b60019150509392505050565b60006012905090565b6000806104246106ec565b90506104458185856104368589610668565b61044091906110b0565b6106f4565b600191505092915050565b600061046461045b6106ec565b8361048c565b6001905092915050565b6104888282604051806020016040528060008152506105be565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104c490610fff565b80601f01602080910402602001604051908101604052809291908181526020018280546104f090610fff565b801561053d5780601f106105125761010080835404028352916020019161053d565b820191906000526020600020905b81548152906001019060200180831161052057829003601f168201915b5050505050905090565b6000806105526106ec565b905060006105608286610668565b90508381101561057357600080fd5b61058082868684036106f4565b61058b858584610956565b600191505092915050565b6000806105c96106ec565b90506105d68185856106f4565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90611152565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb90611174565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108b29190610e77565b60405180910390a3505050565b60006108cb8484610668565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109505781811015610942576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093990611196565b60405180910390fd5b61094f8484848403610956565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd906111b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d906111da565b60405180910390fd5b610a41838383610c2b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ac7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abe906111fc565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b5a91906110b0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bbe9190610e77565b60405180910390a3610bd1848484610c30565b50505050565b6000610be1610c35565b905090565b610bef82610c3d565b50565b610bfb82610d01565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c62906111da565b60405180910390fd5b610c7760008383610c2b565b8060026000828254610c8991906110b0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cde91906110b0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c9e9190610e77565b60405180910390a3610cb2600083836105be565b5050565b600033905090565b505050565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c4681610c4b565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb29061121e565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6890611240565b60405180910390fd5b610d7d60008383610c2b565b8060026000828254610d8f9190611262565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610de49190611262565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e499190610e77565b60405180910390a3610e5d60008383610c30565b5050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e9c578082015181840152602081019050610e81565b83811115610eab576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ecd82610e62565b610ed78185610e6d565b9350610ee7818560208601610e7e565b610ef081610eb1565b840191505092915050565b600060208201905081810360008301526110148184610ec2565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061104c82611021565b9050919050565b61105c81611041565b811461106757600080fd5b50565b60008135905061107981611053565b92915050565b6000819050919050565b6110928161107f565b811461109d57600080fd5b50565b6000813590506110af81611089565b92915050565b60006110bb8261107f565b91506110c68361107f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110fb576110fa6112b6565b5b828201905092915050565b600061111182611021565b9050919050565b61112181611106565b811461112c57600080fd5b50565b60008135905061113e81611118565b92915050565b60006020828403121561115a5761115961101c565b5b60006111688482850161106a565b91505092915050565b60006020828403121561118857611187611101c565b5b6000611196848285016110a0565b91505092915050565b6000602082840312156111b4576111b361101c565b5b60006111c28482850161112f565b91505092915050565b6000602082840312156111e0576111df61101c565b5b60006111ee848285016111d5565b91505092915050565b6000602082840312156111fc576111fb61101c565b5b60006112098482850161101c565b91505092915050565b600060208201905081810360008301526112298184611152565b905092915050565b600060208201905081810360008301526112498184611174565b905092915050565b600060208201905081810360008301526112698184611196565b905092915050565b600060208201905081810360008301526112899184611196565b905092915050565b6000602082019050818103600083015261129b8184611196565b905092915050565b6000602082019050818103600083015261129b8184611196565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112e757607f821691505b602082108114156112fb576112fa6112b6565b5b50919050565b600082825260208201905092915050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061136d602682611301565b915061137882611312565b604082019050919050565b6000602082019050818103600083015261139c81611360565b905091905056fea2646970667358221220d7a0d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d964736f6c63430008000033";

export const deployDMCToken = async (signer: ethers.Signer) => {
    try {
        console.log("Starting DMC token deployment with simplified contract...");
        
        const factory = new ethers.ContractFactory(
            DMC_TOKEN_ABI,
            DMC_TOKEN_BYTECODE,
            signer
        );

        console.log("Creating contract instance...");
        const contract = await factory.deploy();
        
        console.log("Waiting for deployment transaction confirmation...");
        await contract.deployed();
        
        console.log("DMC Token deployed successfully at:", contract.address);
        return contract;
        
    } catch (error) {
        console.error("Error deploying DMC token:", error);
        throw error;
    }
};